/*
 * W3STREAM API
 *
 * W3STREAM Service
 *
 * API version: 1.0
 * Contact: support@swagger.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package w3streamsdk

import (
//"encoding/json"
)

// Controls struct for Controls
type Controls struct {
	EnableApi      *bool `json:"enable_api,omitempty"`
	EnableControls *bool `json:"enable_controls,omitempty"`
	ForceAutoplay  *bool `json:"force_autoplay,omitempty"`
	ForceLoop      *bool `json:"force_loop,omitempty"`
	HideTitle      *bool `json:"hide_title,omitempty"`
}

// NewControls instantiates a new Controls object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewControls() *Controls {
	this := Controls{}
	return &this
}

// NewControlsWithDefaults instantiates a new Controls object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewControlsWithDefaults() *Controls {
	this := Controls{}
	return &this
}

// GetEnableApi returns the EnableApi field value if set, zero value otherwise.
func (o *Controls) GetEnableApi() bool {
	if o == nil || o.EnableApi == nil {
		var ret bool
		return ret
	}
	return *o.EnableApi
}

// GetEnableApiOk returns a tuple with the EnableApi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Controls) GetEnableApiOk() (*bool, bool) {
	if o == nil || o.EnableApi == nil {
		return nil, false
	}
	return o.EnableApi, true
}

// HasEnableApi returns a boolean if a field has been set.
func (o *Controls) HasEnableApi() bool {
	if o != nil && o.EnableApi != nil {
		return true
	}

	return false
}

// SetEnableApi gets a reference to the given bool and assigns it to the EnableApi field.
func (o *Controls) SetEnableApi(v bool) {
	o.EnableApi = &v
}

// GetEnableControls returns the EnableControls field value if set, zero value otherwise.
func (o *Controls) GetEnableControls() bool {
	if o == nil || o.EnableControls == nil {
		var ret bool
		return ret
	}
	return *o.EnableControls
}

// GetEnableControlsOk returns a tuple with the EnableControls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Controls) GetEnableControlsOk() (*bool, bool) {
	if o == nil || o.EnableControls == nil {
		return nil, false
	}
	return o.EnableControls, true
}

// HasEnableControls returns a boolean if a field has been set.
func (o *Controls) HasEnableControls() bool {
	if o != nil && o.EnableControls != nil {
		return true
	}

	return false
}

// SetEnableControls gets a reference to the given bool and assigns it to the EnableControls field.
func (o *Controls) SetEnableControls(v bool) {
	o.EnableControls = &v
}

// GetForceAutoplay returns the ForceAutoplay field value if set, zero value otherwise.
func (o *Controls) GetForceAutoplay() bool {
	if o == nil || o.ForceAutoplay == nil {
		var ret bool
		return ret
	}
	return *o.ForceAutoplay
}

// GetForceAutoplayOk returns a tuple with the ForceAutoplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Controls) GetForceAutoplayOk() (*bool, bool) {
	if o == nil || o.ForceAutoplay == nil {
		return nil, false
	}
	return o.ForceAutoplay, true
}

// HasForceAutoplay returns a boolean if a field has been set.
func (o *Controls) HasForceAutoplay() bool {
	if o != nil && o.ForceAutoplay != nil {
		return true
	}

	return false
}

// SetForceAutoplay gets a reference to the given bool and assigns it to the ForceAutoplay field.
func (o *Controls) SetForceAutoplay(v bool) {
	o.ForceAutoplay = &v
}

// GetForceLoop returns the ForceLoop field value if set, zero value otherwise.
func (o *Controls) GetForceLoop() bool {
	if o == nil || o.ForceLoop == nil {
		var ret bool
		return ret
	}
	return *o.ForceLoop
}

// GetForceLoopOk returns a tuple with the ForceLoop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Controls) GetForceLoopOk() (*bool, bool) {
	if o == nil || o.ForceLoop == nil {
		return nil, false
	}
	return o.ForceLoop, true
}

// HasForceLoop returns a boolean if a field has been set.
func (o *Controls) HasForceLoop() bool {
	if o != nil && o.ForceLoop != nil {
		return true
	}

	return false
}

// SetForceLoop gets a reference to the given bool and assigns it to the ForceLoop field.
func (o *Controls) SetForceLoop(v bool) {
	o.ForceLoop = &v
}

// GetHideTitle returns the HideTitle field value if set, zero value otherwise.
func (o *Controls) GetHideTitle() bool {
	if o == nil || o.HideTitle == nil {
		var ret bool
		return ret
	}
	return *o.HideTitle
}

// GetHideTitleOk returns a tuple with the HideTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Controls) GetHideTitleOk() (*bool, bool) {
	if o == nil || o.HideTitle == nil {
		return nil, false
	}
	return o.HideTitle, true
}

// HasHideTitle returns a boolean if a field has been set.
func (o *Controls) HasHideTitle() bool {
	if o != nil && o.HideTitle != nil {
		return true
	}

	return false
}

// SetHideTitle gets a reference to the given bool and assigns it to the HideTitle field.
func (o *Controls) SetHideTitle(v bool) {
	o.HideTitle = &v
}

type NullableControls struct {
	value *Controls
	isSet bool
}

func (v NullableControls) Get() *Controls {
	return v.value
}

func (v *NullableControls) Set(val *Controls) {
	v.value = val
	v.isSet = true
}

func (v NullableControls) IsSet() bool {
	return v.isSet
}

func (v *NullableControls) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableControls(val *Controls) *NullableControls {
	return &NullableControls{value: val, isSet: true}
}
