/*
 * VMS API
 *
 * VMS Service
 *
 * API version: 1.0
 * Contact: support@swagger.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package w3streamsdk

import (
//"encoding/json"
)

// CreatePlayerThemesData struct for CreatePlayerThemesData
type CreatePlayerThemesData struct {
	PlayerTheme *PlayerTheme `json:"player_theme,omitempty"`
}

// NewCreatePlayerThemesData instantiates a new CreatePlayerThemesData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePlayerThemesData() *CreatePlayerThemesData {
	this := CreatePlayerThemesData{}
	return &this
}

// NewCreatePlayerThemesDataWithDefaults instantiates a new CreatePlayerThemesData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePlayerThemesDataWithDefaults() *CreatePlayerThemesData {
	this := CreatePlayerThemesData{}
	return &this
}

// GetPlayerTheme returns the PlayerTheme field value if set, zero value otherwise.
func (o *CreatePlayerThemesData) GetPlayerTheme() PlayerTheme {
	if o == nil || o.PlayerTheme == nil {
		var ret PlayerTheme
		return ret
	}
	return *o.PlayerTheme
}

// GetPlayerThemeOk returns a tuple with the PlayerTheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePlayerThemesData) GetPlayerThemeOk() (*PlayerTheme, bool) {
	if o == nil || o.PlayerTheme == nil {
		return nil, false
	}
	return o.PlayerTheme, true
}

// HasPlayerTheme returns a boolean if a field has been set.
func (o *CreatePlayerThemesData) HasPlayerTheme() bool {
	if o != nil && o.PlayerTheme != nil {
		return true
	}

	return false
}

// SetPlayerTheme gets a reference to the given PlayerTheme and assigns it to the PlayerTheme field.
func (o *CreatePlayerThemesData) SetPlayerTheme(v PlayerTheme) {
	o.PlayerTheme = &v
}

type NullableCreatePlayerThemesData struct {
	value *CreatePlayerThemesData
	isSet bool
}

func (v NullableCreatePlayerThemesData) Get() *CreatePlayerThemesData {
	return v.value
}

func (v *NullableCreatePlayerThemesData) Set(val *CreatePlayerThemesData) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePlayerThemesData) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePlayerThemesData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePlayerThemesData(val *CreatePlayerThemesData) *NullableCreatePlayerThemesData {
	return &NullableCreatePlayerThemesData{value: val, isSet: true}
}
