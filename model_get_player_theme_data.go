/*
 * VMS API
 *
 * VMS Service
 *
 * API version: 1.0
 * Contact: support@swagger.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package w3streamsdk

import (
//"encoding/json"
)

// GetPlayerThemeData struct for GetPlayerThemeData
type GetPlayerThemeData struct {
	PlayerThemes *[]PlayerTheme `json:"player_themes,omitempty"`
	Total        *int32         `json:"total,omitempty"`
}

// NewGetPlayerThemeData instantiates a new GetPlayerThemeData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPlayerThemeData() *GetPlayerThemeData {
	this := GetPlayerThemeData{}
	return &this
}

// NewGetPlayerThemeDataWithDefaults instantiates a new GetPlayerThemeData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPlayerThemeDataWithDefaults() *GetPlayerThemeData {
	this := GetPlayerThemeData{}
	return &this
}

// GetPlayerThemes returns the PlayerThemes field value if set, zero value otherwise.
func (o *GetPlayerThemeData) GetPlayerThemes() []PlayerTheme {
	if o == nil || o.PlayerThemes == nil {
		var ret []PlayerTheme
		return ret
	}
	return *o.PlayerThemes
}

// GetPlayerThemesOk returns a tuple with the PlayerThemes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlayerThemeData) GetPlayerThemesOk() (*[]PlayerTheme, bool) {
	if o == nil || o.PlayerThemes == nil {
		return nil, false
	}
	return o.PlayerThemes, true
}

// HasPlayerThemes returns a boolean if a field has been set.
func (o *GetPlayerThemeData) HasPlayerThemes() bool {
	if o != nil && o.PlayerThemes != nil {
		return true
	}

	return false
}

// SetPlayerThemes gets a reference to the given []PlayerTheme and assigns it to the PlayerThemes field.
func (o *GetPlayerThemeData) SetPlayerThemes(v []PlayerTheme) {
	o.PlayerThemes = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *GetPlayerThemeData) GetTotal() int32 {
	if o == nil || o.Total == nil {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlayerThemeData) GetTotalOk() (*int32, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *GetPlayerThemeData) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *GetPlayerThemeData) SetTotal(v int32) {
	o.Total = &v
}

type NullableGetPlayerThemeData struct {
	value *GetPlayerThemeData
	isSet bool
}

func (v NullableGetPlayerThemeData) Get() *GetPlayerThemeData {
	return v.value
}

func (v *NullableGetPlayerThemeData) Set(val *GetPlayerThemeData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPlayerThemeData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPlayerThemeData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPlayerThemeData(val *GetPlayerThemeData) *NullableGetPlayerThemeData {
	return &NullableGetPlayerThemeData{value: val, isSet: true}
}
