/*
 * Aioz Stream API
 *
 * Aioz Stream Service
 *
 * API version: 1.0
 * Contact: support@swagger.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aiozstreamsdk

import (
//"encoding/json"
)

// GetPlaylistByIdData struct for GetPlaylistByIdData
type GetPlaylistByIdData struct {
	Playlist *Playlist `json:"playlist,omitempty"`
}

// NewGetPlaylistByIdData instantiates a new GetPlaylistByIdData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPlaylistByIdData() *GetPlaylistByIdData {
	this := GetPlaylistByIdData{}
	return &this
}

// NewGetPlaylistByIdDataWithDefaults instantiates a new GetPlaylistByIdData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPlaylistByIdDataWithDefaults() *GetPlaylistByIdData {
	this := GetPlaylistByIdData{}
	return &this
}

// GetPlaylist returns the Playlist field value if set, zero value otherwise.
func (o *GetPlaylistByIdData) GetPlaylist() Playlist {
	if o == nil || o.Playlist == nil {
		var ret Playlist
		return ret
	}
	return *o.Playlist
}

// GetPlaylistOk returns a tuple with the Playlist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlaylistByIdData) GetPlaylistOk() (*Playlist, bool) {
	if o == nil || o.Playlist == nil {
		return nil, false
	}
	return o.Playlist, true
}

// HasPlaylist returns a boolean if a field has been set.
func (o *GetPlaylistByIdData) HasPlaylist() bool {
	if o != nil && o.Playlist != nil {
		return true
	}

	return false
}

// SetPlaylist gets a reference to the given Playlist and assigns it to the Playlist field.
func (o *GetPlaylistByIdData) SetPlaylist(v Playlist) {
	o.Playlist = &v
}

type NullableGetPlaylistByIdData struct {
	value *GetPlaylistByIdData
	isSet bool
}

func (v NullableGetPlaylistByIdData) Get() *GetPlaylistByIdData {
	return v.value
}

func (v *NullableGetPlaylistByIdData) Set(val *GetPlaylistByIdData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPlaylistByIdData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPlaylistByIdData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPlaylistByIdData(val *GetPlaylistByIdData) *NullableGetPlaylistByIdData {
	return &NullableGetPlaylistByIdData{value: val, isSet: true}
}
