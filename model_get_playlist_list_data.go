/*
 * Aioz Stream API
 *
 * Aioz Stream Service
 *
 * API version: 1.0
 * Contact: support@swagger.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aiozstreamsdk

import (
	//"encoding/json"
)

// GetPlaylistListData struct for GetPlaylistListData
type GetPlaylistListData struct {
	Playlists *[]Playlist `json:"playlists,omitempty"`
	Total *int32 `json:"total,omitempty"`
}

// NewGetPlaylistListData instantiates a new GetPlaylistListData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPlaylistListData() *GetPlaylistListData {
	this := GetPlaylistListData{}
	return &this
}

// NewGetPlaylistListDataWithDefaults instantiates a new GetPlaylistListData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPlaylistListDataWithDefaults() *GetPlaylistListData {
	this := GetPlaylistListData{}
	return &this
}

// GetPlaylists returns the Playlists field value if set, zero value otherwise.
func (o *GetPlaylistListData) GetPlaylists() []Playlist {
	if o == nil || o.Playlists == nil {
		var ret []Playlist
		return ret
	}
	return *o.Playlists
}

// GetPlaylistsOk returns a tuple with the Playlists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlaylistListData) GetPlaylistsOk() (*[]Playlist, bool) {
	if o == nil || o.Playlists == nil {
		return nil, false
	}
	return o.Playlists, true
}

// HasPlaylists returns a boolean if a field has been set.
func (o *GetPlaylistListData) HasPlaylists() bool {
	if o != nil && o.Playlists != nil {
		return true
	}

	return false
}

// SetPlaylists gets a reference to the given []Playlist and assigns it to the Playlists field.
func (o *GetPlaylistListData) SetPlaylists(v []Playlist) {
	o.Playlists = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *GetPlaylistListData) GetTotal() int32 {
	if o == nil || o.Total == nil {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlaylistListData) GetTotalOk() (*int32, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *GetPlaylistListData) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *GetPlaylistListData) SetTotal(v int32) {
	o.Total = &v
}


type NullableGetPlaylistListData struct {
	value *GetPlaylistListData
	isSet bool
}

func (v NullableGetPlaylistListData) Get() *GetPlaylistListData {
	return v.value
}

func (v *NullableGetPlaylistListData) Set(val *GetPlaylistListData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPlaylistListData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPlaylistListData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPlaylistListData(val *GetPlaylistListData) *NullableGetPlaylistListData {
	return &NullableGetPlaylistListData{value: val, isSet: true}
}


