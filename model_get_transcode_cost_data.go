/*
 * Aioz Stream API
 *
 * Aioz Stream Service
 *
 * API version: 1.0
 * Contact: support@swagger.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aiozstreamsdk

import (
//"encoding/json"
)

// GetTranscodeCostData struct for GetTranscodeCostData
type GetTranscodeCostData struct {
	IsEnough *bool   `json:"is_enough,omitempty"`
	Price    *string `json:"price,omitempty"`
}

// NewGetTranscodeCostData instantiates a new GetTranscodeCostData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTranscodeCostData() *GetTranscodeCostData {
	this := GetTranscodeCostData{}
	return &this
}

// NewGetTranscodeCostDataWithDefaults instantiates a new GetTranscodeCostData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTranscodeCostDataWithDefaults() *GetTranscodeCostData {
	this := GetTranscodeCostData{}
	return &this
}

// GetIsEnough returns the IsEnough field value if set, zero value otherwise.
func (o *GetTranscodeCostData) GetIsEnough() bool {
	if o == nil || o.IsEnough == nil {
		var ret bool
		return ret
	}
	return *o.IsEnough
}

// GetIsEnoughOk returns a tuple with the IsEnough field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTranscodeCostData) GetIsEnoughOk() (*bool, bool) {
	if o == nil || o.IsEnough == nil {
		return nil, false
	}
	return o.IsEnough, true
}

// HasIsEnough returns a boolean if a field has been set.
func (o *GetTranscodeCostData) HasIsEnough() bool {
	if o != nil && o.IsEnough != nil {
		return true
	}

	return false
}

// SetIsEnough gets a reference to the given bool and assigns it to the IsEnough field.
func (o *GetTranscodeCostData) SetIsEnough(v bool) {
	o.IsEnough = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *GetTranscodeCostData) GetPrice() string {
	if o == nil || o.Price == nil {
		var ret string
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTranscodeCostData) GetPriceOk() (*string, bool) {
	if o == nil || o.Price == nil {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *GetTranscodeCostData) HasPrice() bool {
	if o != nil && o.Price != nil {
		return true
	}

	return false
}

// SetPrice gets a reference to the given string and assigns it to the Price field.
func (o *GetTranscodeCostData) SetPrice(v string) {
	o.Price = &v
}

type NullableGetTranscodeCostData struct {
	value *GetTranscodeCostData
	isSet bool
}

func (v NullableGetTranscodeCostData) Get() *GetTranscodeCostData {
	return v.value
}

func (v *NullableGetTranscodeCostData) Set(val *GetTranscodeCostData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTranscodeCostData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTranscodeCostData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTranscodeCostData(val *GetTranscodeCostData) *NullableGetTranscodeCostData {
	return &NullableGetTranscodeCostData{value: val, isSet: true}
}
