/*
 * Aioz Stream API
 *
 * Aioz Stream Service
 *
 * API version: 1.0
 * Contact: support@swagger.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aiozstreamsdk

import (
	//"encoding/json"
)

// GetUserWebhookData struct for GetUserWebhookData
type GetUserWebhookData struct {
	Webhook *Webhook `json:"webhook,omitempty"`
}

// NewGetUserWebhookData instantiates a new GetUserWebhookData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetUserWebhookData() *GetUserWebhookData {
	this := GetUserWebhookData{}
	return &this
}

// NewGetUserWebhookDataWithDefaults instantiates a new GetUserWebhookData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetUserWebhookDataWithDefaults() *GetUserWebhookData {
	this := GetUserWebhookData{}
	return &this
}

// GetWebhook returns the Webhook field value if set, zero value otherwise.
func (o *GetUserWebhookData) GetWebhook() Webhook {
	if o == nil || o.Webhook == nil {
		var ret Webhook
		return ret
	}
	return *o.Webhook
}

// GetWebhookOk returns a tuple with the Webhook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserWebhookData) GetWebhookOk() (*Webhook, bool) {
	if o == nil || o.Webhook == nil {
		return nil, false
	}
	return o.Webhook, true
}

// HasWebhook returns a boolean if a field has been set.
func (o *GetUserWebhookData) HasWebhook() bool {
	if o != nil && o.Webhook != nil {
		return true
	}

	return false
}

// SetWebhook gets a reference to the given Webhook and assigns it to the Webhook field.
func (o *GetUserWebhookData) SetWebhook(v Webhook) {
	o.Webhook = &v
}


type NullableGetUserWebhookData struct {
	value *GetUserWebhookData
	isSet bool
}

func (v NullableGetUserWebhookData) Get() *GetUserWebhookData {
	return v.value
}

func (v *NullableGetUserWebhookData) Set(val *GetUserWebhookData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUserWebhookData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUserWebhookData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUserWebhookData(val *GetUserWebhookData) *NullableGetUserWebhookData {
	return &NullableGetUserWebhookData{value: val, isSet: true}
}


