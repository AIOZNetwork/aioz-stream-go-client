/*
 * Aioz Stream API
 *
 * Aioz Stream Service
 *
 * API version: 1.0
 * Contact: support@swagger.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aiozstreamsdk

import (
//"encoding/json"
)

// GetVideoCaptionsData struct for GetVideoCaptionsData
type GetVideoCaptionsData struct {
	Total         *int32          `json:"total,omitempty"`
	VideoCaptions *[]VideoCaption `json:"video_captions,omitempty"`
}

// NewGetVideoCaptionsData instantiates a new GetVideoCaptionsData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetVideoCaptionsData() *GetVideoCaptionsData {
	this := GetVideoCaptionsData{}
	return &this
}

// NewGetVideoCaptionsDataWithDefaults instantiates a new GetVideoCaptionsData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetVideoCaptionsDataWithDefaults() *GetVideoCaptionsData {
	this := GetVideoCaptionsData{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *GetVideoCaptionsData) GetTotal() int32 {
	if o == nil || o.Total == nil {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVideoCaptionsData) GetTotalOk() (*int32, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *GetVideoCaptionsData) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *GetVideoCaptionsData) SetTotal(v int32) {
	o.Total = &v
}

// GetVideoCaptions returns the VideoCaptions field value if set, zero value otherwise.
func (o *GetVideoCaptionsData) GetVideoCaptions() []VideoCaption {
	if o == nil || o.VideoCaptions == nil {
		var ret []VideoCaption
		return ret
	}
	return *o.VideoCaptions
}

// GetVideoCaptionsOk returns a tuple with the VideoCaptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVideoCaptionsData) GetVideoCaptionsOk() (*[]VideoCaption, bool) {
	if o == nil || o.VideoCaptions == nil {
		return nil, false
	}
	return o.VideoCaptions, true
}

// HasVideoCaptions returns a boolean if a field has been set.
func (o *GetVideoCaptionsData) HasVideoCaptions() bool {
	if o != nil && o.VideoCaptions != nil {
		return true
	}

	return false
}

// SetVideoCaptions gets a reference to the given []VideoCaption and assigns it to the VideoCaptions field.
func (o *GetVideoCaptionsData) SetVideoCaptions(v []VideoCaption) {
	o.VideoCaptions = &v
}

type NullableGetVideoCaptionsData struct {
	value *GetVideoCaptionsData
	isSet bool
}

func (v NullableGetVideoCaptionsData) Get() *GetVideoCaptionsData {
	return v.value
}

func (v *NullableGetVideoCaptionsData) Set(val *GetVideoCaptionsData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetVideoCaptionsData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetVideoCaptionsData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetVideoCaptionsData(val *GetVideoCaptionsData) *NullableGetVideoCaptionsData {
	return &NullableGetVideoCaptionsData{value: val, isSet: true}
}
