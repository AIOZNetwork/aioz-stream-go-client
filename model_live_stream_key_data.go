/*
 * Aioz Stream API
 *
 * Aioz Stream Service
 *
 * API version: 1.0
 * Contact: support@swagger.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aiozstreamsdk

import (
//"encoding/json"
)

// LiveStreamKeyData struct for LiveStreamKeyData
type LiveStreamKeyData struct {
	CreatedAt *string `json:"created_at,omitempty"`
	Id        *string `json:"id,omitempty"`
	Name      *string `json:"name,omitempty"`
	RtmpUrl   *string `json:"rtmp_url,omitempty"`
	Save      *bool   `json:"save,omitempty"`
	StreamKey *string `json:"stream_key,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	UserId    *string `json:"user_id,omitempty"`
}

// NewLiveStreamKeyData instantiates a new LiveStreamKeyData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLiveStreamKeyData() *LiveStreamKeyData {
	this := LiveStreamKeyData{}
	return &this
}

// NewLiveStreamKeyDataWithDefaults instantiates a new LiveStreamKeyData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLiveStreamKeyDataWithDefaults() *LiveStreamKeyData {
	this := LiveStreamKeyData{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *LiveStreamKeyData) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamKeyData) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *LiveStreamKeyData) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *LiveStreamKeyData) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *LiveStreamKeyData) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamKeyData) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *LiveStreamKeyData) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *LiveStreamKeyData) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *LiveStreamKeyData) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamKeyData) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *LiveStreamKeyData) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *LiveStreamKeyData) SetName(v string) {
	o.Name = &v
}

// GetRtmpUrl returns the RtmpUrl field value if set, zero value otherwise.
func (o *LiveStreamKeyData) GetRtmpUrl() string {
	if o == nil || o.RtmpUrl == nil {
		var ret string
		return ret
	}
	return *o.RtmpUrl
}

// GetRtmpUrlOk returns a tuple with the RtmpUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamKeyData) GetRtmpUrlOk() (*string, bool) {
	if o == nil || o.RtmpUrl == nil {
		return nil, false
	}
	return o.RtmpUrl, true
}

// HasRtmpUrl returns a boolean if a field has been set.
func (o *LiveStreamKeyData) HasRtmpUrl() bool {
	if o != nil && o.RtmpUrl != nil {
		return true
	}

	return false
}

// SetRtmpUrl gets a reference to the given string and assigns it to the RtmpUrl field.
func (o *LiveStreamKeyData) SetRtmpUrl(v string) {
	o.RtmpUrl = &v
}

// GetSave returns the Save field value if set, zero value otherwise.
func (o *LiveStreamKeyData) GetSave() bool {
	if o == nil || o.Save == nil {
		var ret bool
		return ret
	}
	return *o.Save
}

// GetSaveOk returns a tuple with the Save field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamKeyData) GetSaveOk() (*bool, bool) {
	if o == nil || o.Save == nil {
		return nil, false
	}
	return o.Save, true
}

// HasSave returns a boolean if a field has been set.
func (o *LiveStreamKeyData) HasSave() bool {
	if o != nil && o.Save != nil {
		return true
	}

	return false
}

// SetSave gets a reference to the given bool and assigns it to the Save field.
func (o *LiveStreamKeyData) SetSave(v bool) {
	o.Save = &v
}

// GetStreamKey returns the StreamKey field value if set, zero value otherwise.
func (o *LiveStreamKeyData) GetStreamKey() string {
	if o == nil || o.StreamKey == nil {
		var ret string
		return ret
	}
	return *o.StreamKey
}

// GetStreamKeyOk returns a tuple with the StreamKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamKeyData) GetStreamKeyOk() (*string, bool) {
	if o == nil || o.StreamKey == nil {
		return nil, false
	}
	return o.StreamKey, true
}

// HasStreamKey returns a boolean if a field has been set.
func (o *LiveStreamKeyData) HasStreamKey() bool {
	if o != nil && o.StreamKey != nil {
		return true
	}

	return false
}

// SetStreamKey gets a reference to the given string and assigns it to the StreamKey field.
func (o *LiveStreamKeyData) SetStreamKey(v string) {
	o.StreamKey = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *LiveStreamKeyData) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamKeyData) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *LiveStreamKeyData) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *LiveStreamKeyData) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *LiveStreamKeyData) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamKeyData) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *LiveStreamKeyData) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *LiveStreamKeyData) SetUserId(v string) {
	o.UserId = &v
}

type NullableLiveStreamKeyData struct {
	value *LiveStreamKeyData
	isSet bool
}

func (v NullableLiveStreamKeyData) Get() *LiveStreamKeyData {
	return v.value
}

func (v *NullableLiveStreamKeyData) Set(val *LiveStreamKeyData) {
	v.value = val
	v.isSet = true
}

func (v NullableLiveStreamKeyData) IsSet() bool {
	return v.isSet
}

func (v *NullableLiveStreamKeyData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLiveStreamKeyData(val *LiveStreamKeyData) *NullableLiveStreamKeyData {
	return &NullableLiveStreamKeyData{value: val, isSet: true}
}
