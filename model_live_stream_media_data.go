/*
 * Aioz Stream API
 *
 * Aioz Stream Service
 *
 * API version: 1.0
 * Contact: support@swagger.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aiozstreamsdk

import (
//"encoding/json"
)

// LiveStreamMediaData struct for LiveStreamMediaData
type LiveStreamMediaData struct {
	Assets          *LiveStreamAssets `json:"assets,omitempty"`
	CreatedAt       *string           `json:"created_at,omitempty"`
	Duration        *int32            `json:"duration,omitempty"`
	Id              *string           `json:"id,omitempty"`
	LiveStreamKeyId *string           `json:"live_stream_key_id,omitempty"`
	Media           *Media            `json:"media,omitempty"`
	Qualities       *[]string         `json:"qualities,omitempty"`
	Save            *bool             `json:"save,omitempty"`
	Status          *string           `json:"status,omitempty"`
	Title           *string           `json:"title,omitempty"`
	UpdatedAt       *string           `json:"updated_at,omitempty"`
	UserId          *string           `json:"user_id,omitempty"`
}

// NewLiveStreamMediaData instantiates a new LiveStreamMediaData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLiveStreamMediaData() *LiveStreamMediaData {
	this := LiveStreamMediaData{}
	return &this
}

// NewLiveStreamMediaDataWithDefaults instantiates a new LiveStreamMediaData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLiveStreamMediaDataWithDefaults() *LiveStreamMediaData {
	this := LiveStreamMediaData{}
	return &this
}

// GetAssets returns the Assets field value if set, zero value otherwise.
func (o *LiveStreamMediaData) GetAssets() LiveStreamAssets {
	if o == nil || o.Assets == nil {
		var ret LiveStreamAssets
		return ret
	}
	return *o.Assets
}

// GetAssetsOk returns a tuple with the Assets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamMediaData) GetAssetsOk() (*LiveStreamAssets, bool) {
	if o == nil || o.Assets == nil {
		return nil, false
	}
	return o.Assets, true
}

// HasAssets returns a boolean if a field has been set.
func (o *LiveStreamMediaData) HasAssets() bool {
	if o != nil && o.Assets != nil {
		return true
	}

	return false
}

// SetAssets gets a reference to the given LiveStreamAssets and assigns it to the Assets field.
func (o *LiveStreamMediaData) SetAssets(v LiveStreamAssets) {
	o.Assets = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *LiveStreamMediaData) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamMediaData) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *LiveStreamMediaData) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *LiveStreamMediaData) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *LiveStreamMediaData) GetDuration() int32 {
	if o == nil || o.Duration == nil {
		var ret int32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamMediaData) GetDurationOk() (*int32, bool) {
	if o == nil || o.Duration == nil {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *LiveStreamMediaData) HasDuration() bool {
	if o != nil && o.Duration != nil {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int32 and assigns it to the Duration field.
func (o *LiveStreamMediaData) SetDuration(v int32) {
	o.Duration = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *LiveStreamMediaData) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamMediaData) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *LiveStreamMediaData) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *LiveStreamMediaData) SetId(v string) {
	o.Id = &v
}

// GetLiveStreamKeyId returns the LiveStreamKeyId field value if set, zero value otherwise.
func (o *LiveStreamMediaData) GetLiveStreamKeyId() string {
	if o == nil || o.LiveStreamKeyId == nil {
		var ret string
		return ret
	}
	return *o.LiveStreamKeyId
}

// GetLiveStreamKeyIdOk returns a tuple with the LiveStreamKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamMediaData) GetLiveStreamKeyIdOk() (*string, bool) {
	if o == nil || o.LiveStreamKeyId == nil {
		return nil, false
	}
	return o.LiveStreamKeyId, true
}

// HasLiveStreamKeyId returns a boolean if a field has been set.
func (o *LiveStreamMediaData) HasLiveStreamKeyId() bool {
	if o != nil && o.LiveStreamKeyId != nil {
		return true
	}

	return false
}

// SetLiveStreamKeyId gets a reference to the given string and assigns it to the LiveStreamKeyId field.
func (o *LiveStreamMediaData) SetLiveStreamKeyId(v string) {
	o.LiveStreamKeyId = &v
}

// GetMedia returns the Media field value if set, zero value otherwise.
func (o *LiveStreamMediaData) GetMedia() Media {
	if o == nil || o.Media == nil {
		var ret Media
		return ret
	}
	return *o.Media
}

// GetMediaOk returns a tuple with the Media field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamMediaData) GetMediaOk() (*Media, bool) {
	if o == nil || o.Media == nil {
		return nil, false
	}
	return o.Media, true
}

// HasMedia returns a boolean if a field has been set.
func (o *LiveStreamMediaData) HasMedia() bool {
	if o != nil && o.Media != nil {
		return true
	}

	return false
}

// SetMedia gets a reference to the given Media and assigns it to the Media field.
func (o *LiveStreamMediaData) SetMedia(v Media) {
	o.Media = &v
}

// GetQualities returns the Qualities field value if set, zero value otherwise.
func (o *LiveStreamMediaData) GetQualities() []string {
	if o == nil || o.Qualities == nil {
		var ret []string
		return ret
	}
	return *o.Qualities
}

// GetQualitiesOk returns a tuple with the Qualities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamMediaData) GetQualitiesOk() (*[]string, bool) {
	if o == nil || o.Qualities == nil {
		return nil, false
	}
	return o.Qualities, true
}

// HasQualities returns a boolean if a field has been set.
func (o *LiveStreamMediaData) HasQualities() bool {
	if o != nil && o.Qualities != nil {
		return true
	}

	return false
}

// SetQualities gets a reference to the given []string and assigns it to the Qualities field.
func (o *LiveStreamMediaData) SetQualities(v []string) {
	o.Qualities = &v
}

// GetSave returns the Save field value if set, zero value otherwise.
func (o *LiveStreamMediaData) GetSave() bool {
	if o == nil || o.Save == nil {
		var ret bool
		return ret
	}
	return *o.Save
}

// GetSaveOk returns a tuple with the Save field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamMediaData) GetSaveOk() (*bool, bool) {
	if o == nil || o.Save == nil {
		return nil, false
	}
	return o.Save, true
}

// HasSave returns a boolean if a field has been set.
func (o *LiveStreamMediaData) HasSave() bool {
	if o != nil && o.Save != nil {
		return true
	}

	return false
}

// SetSave gets a reference to the given bool and assigns it to the Save field.
func (o *LiveStreamMediaData) SetSave(v bool) {
	o.Save = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *LiveStreamMediaData) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamMediaData) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *LiveStreamMediaData) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *LiveStreamMediaData) SetStatus(v string) {
	o.Status = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *LiveStreamMediaData) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamMediaData) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *LiveStreamMediaData) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *LiveStreamMediaData) SetTitle(v string) {
	o.Title = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *LiveStreamMediaData) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamMediaData) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *LiveStreamMediaData) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *LiveStreamMediaData) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *LiveStreamMediaData) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamMediaData) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *LiveStreamMediaData) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *LiveStreamMediaData) SetUserId(v string) {
	o.UserId = &v
}

type NullableLiveStreamMediaData struct {
	value *LiveStreamMediaData
	isSet bool
}

func (v NullableLiveStreamMediaData) Get() *LiveStreamMediaData {
	return v.value
}

func (v *NullableLiveStreamMediaData) Set(val *LiveStreamMediaData) {
	v.value = val
	v.isSet = true
}

func (v NullableLiveStreamMediaData) IsSet() bool {
	return v.isSet
}

func (v *NullableLiveStreamMediaData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLiveStreamMediaData(val *LiveStreamMediaData) *NullableLiveStreamMediaData {
	return &NullableLiveStreamMediaData{value: val, isSet: true}
}
