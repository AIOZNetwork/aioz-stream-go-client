/*
 * Aioz Stream API
 *
 * Aioz Stream Service
 *
 * API version: 1.0
 * Contact: support@swagger.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aiozstreamsdk

import (
	//"encoding/json"
)

// LiveStreamVideoData struct for LiveStreamVideoData
type LiveStreamVideoData struct {
	Assets *LiveStreamAssets `json:"assets,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	Duration *int32 `json:"duration,omitempty"`
	Id *string `json:"id,omitempty"`
	LiveStreamKeyId *string `json:"live_stream_key_id,omitempty"`
	Qualities *[]string `json:"qualities,omitempty"`
	Save *bool `json:"save,omitempty"`
	Status *string `json:"status,omitempty"`
	Title *string `json:"title,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	UserId *string `json:"user_id,omitempty"`
	Video *Video `json:"video,omitempty"`
}

// NewLiveStreamVideoData instantiates a new LiveStreamVideoData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLiveStreamVideoData() *LiveStreamVideoData {
	this := LiveStreamVideoData{}
	return &this
}

// NewLiveStreamVideoDataWithDefaults instantiates a new LiveStreamVideoData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLiveStreamVideoDataWithDefaults() *LiveStreamVideoData {
	this := LiveStreamVideoData{}
	return &this
}

// GetAssets returns the Assets field value if set, zero value otherwise.
func (o *LiveStreamVideoData) GetAssets() LiveStreamAssets {
	if o == nil || o.Assets == nil {
		var ret LiveStreamAssets
		return ret
	}
	return *o.Assets
}

// GetAssetsOk returns a tuple with the Assets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamVideoData) GetAssetsOk() (*LiveStreamAssets, bool) {
	if o == nil || o.Assets == nil {
		return nil, false
	}
	return o.Assets, true
}

// HasAssets returns a boolean if a field has been set.
func (o *LiveStreamVideoData) HasAssets() bool {
	if o != nil && o.Assets != nil {
		return true
	}

	return false
}

// SetAssets gets a reference to the given LiveStreamAssets and assigns it to the Assets field.
func (o *LiveStreamVideoData) SetAssets(v LiveStreamAssets) {
	o.Assets = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *LiveStreamVideoData) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamVideoData) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *LiveStreamVideoData) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *LiveStreamVideoData) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *LiveStreamVideoData) GetDuration() int32 {
	if o == nil || o.Duration == nil {
		var ret int32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamVideoData) GetDurationOk() (*int32, bool) {
	if o == nil || o.Duration == nil {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *LiveStreamVideoData) HasDuration() bool {
	if o != nil && o.Duration != nil {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int32 and assigns it to the Duration field.
func (o *LiveStreamVideoData) SetDuration(v int32) {
	o.Duration = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *LiveStreamVideoData) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamVideoData) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *LiveStreamVideoData) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *LiveStreamVideoData) SetId(v string) {
	o.Id = &v
}

// GetLiveStreamKeyId returns the LiveStreamKeyId field value if set, zero value otherwise.
func (o *LiveStreamVideoData) GetLiveStreamKeyId() string {
	if o == nil || o.LiveStreamKeyId == nil {
		var ret string
		return ret
	}
	return *o.LiveStreamKeyId
}

// GetLiveStreamKeyIdOk returns a tuple with the LiveStreamKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamVideoData) GetLiveStreamKeyIdOk() (*string, bool) {
	if o == nil || o.LiveStreamKeyId == nil {
		return nil, false
	}
	return o.LiveStreamKeyId, true
}

// HasLiveStreamKeyId returns a boolean if a field has been set.
func (o *LiveStreamVideoData) HasLiveStreamKeyId() bool {
	if o != nil && o.LiveStreamKeyId != nil {
		return true
	}

	return false
}

// SetLiveStreamKeyId gets a reference to the given string and assigns it to the LiveStreamKeyId field.
func (o *LiveStreamVideoData) SetLiveStreamKeyId(v string) {
	o.LiveStreamKeyId = &v
}

// GetQualities returns the Qualities field value if set, zero value otherwise.
func (o *LiveStreamVideoData) GetQualities() []string {
	if o == nil || o.Qualities == nil {
		var ret []string
		return ret
	}
	return *o.Qualities
}

// GetQualitiesOk returns a tuple with the Qualities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamVideoData) GetQualitiesOk() (*[]string, bool) {
	if o == nil || o.Qualities == nil {
		return nil, false
	}
	return o.Qualities, true
}

// HasQualities returns a boolean if a field has been set.
func (o *LiveStreamVideoData) HasQualities() bool {
	if o != nil && o.Qualities != nil {
		return true
	}

	return false
}

// SetQualities gets a reference to the given []string and assigns it to the Qualities field.
func (o *LiveStreamVideoData) SetQualities(v []string) {
	o.Qualities = &v
}

// GetSave returns the Save field value if set, zero value otherwise.
func (o *LiveStreamVideoData) GetSave() bool {
	if o == nil || o.Save == nil {
		var ret bool
		return ret
	}
	return *o.Save
}

// GetSaveOk returns a tuple with the Save field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamVideoData) GetSaveOk() (*bool, bool) {
	if o == nil || o.Save == nil {
		return nil, false
	}
	return o.Save, true
}

// HasSave returns a boolean if a field has been set.
func (o *LiveStreamVideoData) HasSave() bool {
	if o != nil && o.Save != nil {
		return true
	}

	return false
}

// SetSave gets a reference to the given bool and assigns it to the Save field.
func (o *LiveStreamVideoData) SetSave(v bool) {
	o.Save = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *LiveStreamVideoData) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamVideoData) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *LiveStreamVideoData) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *LiveStreamVideoData) SetStatus(v string) {
	o.Status = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *LiveStreamVideoData) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamVideoData) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *LiveStreamVideoData) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *LiveStreamVideoData) SetTitle(v string) {
	o.Title = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *LiveStreamVideoData) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamVideoData) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *LiveStreamVideoData) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *LiveStreamVideoData) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *LiveStreamVideoData) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamVideoData) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *LiveStreamVideoData) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *LiveStreamVideoData) SetUserId(v string) {
	o.UserId = &v
}

// GetVideo returns the Video field value if set, zero value otherwise.
func (o *LiveStreamVideoData) GetVideo() Video {
	if o == nil || o.Video == nil {
		var ret Video
		return ret
	}
	return *o.Video
}

// GetVideoOk returns a tuple with the Video field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamVideoData) GetVideoOk() (*Video, bool) {
	if o == nil || o.Video == nil {
		return nil, false
	}
	return o.Video, true
}

// HasVideo returns a boolean if a field has been set.
func (o *LiveStreamVideoData) HasVideo() bool {
	if o != nil && o.Video != nil {
		return true
	}

	return false
}

// SetVideo gets a reference to the given Video and assigns it to the Video field.
func (o *LiveStreamVideoData) SetVideo(v Video) {
	o.Video = &v
}


type NullableLiveStreamVideoData struct {
	value *LiveStreamVideoData
	isSet bool
}

func (v NullableLiveStreamVideoData) Get() *LiveStreamVideoData {
	return v.value
}

func (v *NullableLiveStreamVideoData) Set(val *LiveStreamVideoData) {
	v.value = val
	v.isSet = true
}

func (v NullableLiveStreamVideoData) IsSet() bool {
	return v.isSet
}

func (v *NullableLiveStreamVideoData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLiveStreamVideoData(val *LiveStreamVideoData) *NullableLiveStreamVideoData {
	return &NullableLiveStreamVideoData{value: val, isSet: true}
}


