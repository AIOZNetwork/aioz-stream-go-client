/*
 * Aioz Stream API
 *
 * Aioz Stream Service
 *
 * API version: 1.0
 * Contact: support@swagger.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aiozstreamsdk

import (
//"encoding/json"
)

// MoveVideoInPlaylistRequest struct for MoveVideoInPlaylistRequest
type MoveVideoInPlaylistRequest struct {
	CurrentId  *string `json:"current_id,omitempty"`
	NextId     *string `json:"next_id,omitempty"`
	PreviousId *string `json:"previous_id,omitempty"`
}

// NewMoveVideoInPlaylistRequest instantiates a new MoveVideoInPlaylistRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMoveVideoInPlaylistRequest() *MoveVideoInPlaylistRequest {
	this := MoveVideoInPlaylistRequest{}
	return &this
}

// NewMoveVideoInPlaylistRequestWithDefaults instantiates a new MoveVideoInPlaylistRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMoveVideoInPlaylistRequestWithDefaults() *MoveVideoInPlaylistRequest {
	this := MoveVideoInPlaylistRequest{}
	return &this
}

// GetCurrentId returns the CurrentId field value if set, zero value otherwise.
func (o *MoveVideoInPlaylistRequest) GetCurrentId() string {
	if o == nil || o.CurrentId == nil {
		var ret string
		return ret
	}
	return *o.CurrentId
}

// GetCurrentIdOk returns a tuple with the CurrentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoveVideoInPlaylistRequest) GetCurrentIdOk() (*string, bool) {
	if o == nil || o.CurrentId == nil {
		return nil, false
	}
	return o.CurrentId, true
}

// HasCurrentId returns a boolean if a field has been set.
func (o *MoveVideoInPlaylistRequest) HasCurrentId() bool {
	if o != nil && o.CurrentId != nil {
		return true
	}

	return false
}

// SetCurrentId gets a reference to the given string and assigns it to the CurrentId field.
func (o *MoveVideoInPlaylistRequest) SetCurrentId(v string) {
	o.CurrentId = &v
}

// GetNextId returns the NextId field value if set, zero value otherwise.
func (o *MoveVideoInPlaylistRequest) GetNextId() string {
	if o == nil || o.NextId == nil {
		var ret string
		return ret
	}
	return *o.NextId
}

// GetNextIdOk returns a tuple with the NextId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoveVideoInPlaylistRequest) GetNextIdOk() (*string, bool) {
	if o == nil || o.NextId == nil {
		return nil, false
	}
	return o.NextId, true
}

// HasNextId returns a boolean if a field has been set.
func (o *MoveVideoInPlaylistRequest) HasNextId() bool {
	if o != nil && o.NextId != nil {
		return true
	}

	return false
}

// SetNextId gets a reference to the given string and assigns it to the NextId field.
func (o *MoveVideoInPlaylistRequest) SetNextId(v string) {
	o.NextId = &v
}

// GetPreviousId returns the PreviousId field value if set, zero value otherwise.
func (o *MoveVideoInPlaylistRequest) GetPreviousId() string {
	if o == nil || o.PreviousId == nil {
		var ret string
		return ret
	}
	return *o.PreviousId
}

// GetPreviousIdOk returns a tuple with the PreviousId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoveVideoInPlaylistRequest) GetPreviousIdOk() (*string, bool) {
	if o == nil || o.PreviousId == nil {
		return nil, false
	}
	return o.PreviousId, true
}

// HasPreviousId returns a boolean if a field has been set.
func (o *MoveVideoInPlaylistRequest) HasPreviousId() bool {
	if o != nil && o.PreviousId != nil {
		return true
	}

	return false
}

// SetPreviousId gets a reference to the given string and assigns it to the PreviousId field.
func (o *MoveVideoInPlaylistRequest) SetPreviousId(v string) {
	o.PreviousId = &v
}

type NullableMoveVideoInPlaylistRequest struct {
	value *MoveVideoInPlaylistRequest
	isSet bool
}

func (v NullableMoveVideoInPlaylistRequest) Get() *MoveVideoInPlaylistRequest {
	return v.value
}

func (v *NullableMoveVideoInPlaylistRequest) Set(val *MoveVideoInPlaylistRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMoveVideoInPlaylistRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMoveVideoInPlaylistRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMoveVideoInPlaylistRequest(val *MoveVideoInPlaylistRequest) *NullableMoveVideoInPlaylistRequest {
	return &NullableMoveVideoInPlaylistRequest{value: val, isSet: true}
}
