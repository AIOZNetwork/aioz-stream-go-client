/*
 * VMS API
 *
 * VMS Service
 *
 * API version: 1.0
 * Contact: support@swagger.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package w3streamsdk

import (
//"encoding/json"
)

// PlayerTheme struct for PlayerTheme
type PlayerTheme struct {
	Asset     *Asset    `json:"asset,omitempty"`
	Controls  *Controls `json:"controls,omitempty"`
	CreatedAt *string   `json:"created_at,omitempty"`
	Id        *string   `json:"id,omitempty"`
	IsDefault *bool     `json:"is_default,omitempty"`
	Name      *string   `json:"name,omitempty"`
	Theme     *Theme    `json:"theme,omitempty"`
	UserId    *string   `json:"user_id,omitempty"`
}

// NewPlayerTheme instantiates a new PlayerTheme object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlayerTheme() *PlayerTheme {
	this := PlayerTheme{}
	return &this
}

// NewPlayerThemeWithDefaults instantiates a new PlayerTheme object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlayerThemeWithDefaults() *PlayerTheme {
	this := PlayerTheme{}
	return &this
}

// GetAsset returns the Asset field value if set, zero value otherwise.
func (o *PlayerTheme) GetAsset() Asset {
	if o == nil || o.Asset == nil {
		var ret Asset
		return ret
	}
	return *o.Asset
}

// GetAssetOk returns a tuple with the Asset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerTheme) GetAssetOk() (*Asset, bool) {
	if o == nil || o.Asset == nil {
		return nil, false
	}
	return o.Asset, true
}

// HasAsset returns a boolean if a field has been set.
func (o *PlayerTheme) HasAsset() bool {
	if o != nil && o.Asset != nil {
		return true
	}

	return false
}

// SetAsset gets a reference to the given Asset and assigns it to the Asset field.
func (o *PlayerTheme) SetAsset(v Asset) {
	o.Asset = &v
}

// GetControls returns the Controls field value if set, zero value otherwise.
func (o *PlayerTheme) GetControls() Controls {
	if o == nil || o.Controls == nil {
		var ret Controls
		return ret
	}
	return *o.Controls
}

// GetControlsOk returns a tuple with the Controls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerTheme) GetControlsOk() (*Controls, bool) {
	if o == nil || o.Controls == nil {
		return nil, false
	}
	return o.Controls, true
}

// HasControls returns a boolean if a field has been set.
func (o *PlayerTheme) HasControls() bool {
	if o != nil && o.Controls != nil {
		return true
	}

	return false
}

// SetControls gets a reference to the given Controls and assigns it to the Controls field.
func (o *PlayerTheme) SetControls(v Controls) {
	o.Controls = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PlayerTheme) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerTheme) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PlayerTheme) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *PlayerTheme) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PlayerTheme) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerTheme) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PlayerTheme) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PlayerTheme) SetId(v string) {
	o.Id = &v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *PlayerTheme) GetIsDefault() bool {
	if o == nil || o.IsDefault == nil {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerTheme) GetIsDefaultOk() (*bool, bool) {
	if o == nil || o.IsDefault == nil {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *PlayerTheme) HasIsDefault() bool {
	if o != nil && o.IsDefault != nil {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *PlayerTheme) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PlayerTheme) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerTheme) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PlayerTheme) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PlayerTheme) SetName(v string) {
	o.Name = &v
}

// GetTheme returns the Theme field value if set, zero value otherwise.
func (o *PlayerTheme) GetTheme() Theme {
	if o == nil || o.Theme == nil {
		var ret Theme
		return ret
	}
	return *o.Theme
}

// GetThemeOk returns a tuple with the Theme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerTheme) GetThemeOk() (*Theme, bool) {
	if o == nil || o.Theme == nil {
		return nil, false
	}
	return o.Theme, true
}

// HasTheme returns a boolean if a field has been set.
func (o *PlayerTheme) HasTheme() bool {
	if o != nil && o.Theme != nil {
		return true
	}

	return false
}

// SetTheme gets a reference to the given Theme and assigns it to the Theme field.
func (o *PlayerTheme) SetTheme(v Theme) {
	o.Theme = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *PlayerTheme) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerTheme) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *PlayerTheme) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *PlayerTheme) SetUserId(v string) {
	o.UserId = &v
}

type NullablePlayerTheme struct {
	value *PlayerTheme
	isSet bool
}

func (v NullablePlayerTheme) Get() *PlayerTheme {
	return v.value
}

func (v *NullablePlayerTheme) Set(val *PlayerTheme) {
	v.value = val
	v.isSet = true
}

func (v NullablePlayerTheme) IsSet() bool {
	return v.isSet
}

func (v *NullablePlayerTheme) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlayerTheme(val *PlayerTheme) *NullablePlayerTheme {
	return &NullablePlayerTheme{value: val, isSet: true}
}
