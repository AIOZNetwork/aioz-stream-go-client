/*
 * Aioz Stream API
 *
 * Aioz Stream Service
 *
 * API version: 1.0
 * Contact: support@swagger.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aiozstreamsdk

import (
	//"encoding/json"
)

// PublicPlaylistObject struct for PublicPlaylistObject
type PublicPlaylistObject struct {
	PlayerTheme *PlayerTheme `json:"player_theme,omitempty"`
	Playlist *Playlist `json:"playlist,omitempty"`
}

// NewPublicPlaylistObject instantiates a new PublicPlaylistObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicPlaylistObject() *PublicPlaylistObject {
	this := PublicPlaylistObject{}
	return &this
}

// NewPublicPlaylistObjectWithDefaults instantiates a new PublicPlaylistObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicPlaylistObjectWithDefaults() *PublicPlaylistObject {
	this := PublicPlaylistObject{}
	return &this
}

// GetPlayerTheme returns the PlayerTheme field value if set, zero value otherwise.
func (o *PublicPlaylistObject) GetPlayerTheme() PlayerTheme {
	if o == nil || o.PlayerTheme == nil {
		var ret PlayerTheme
		return ret
	}
	return *o.PlayerTheme
}

// GetPlayerThemeOk returns a tuple with the PlayerTheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicPlaylistObject) GetPlayerThemeOk() (*PlayerTheme, bool) {
	if o == nil || o.PlayerTheme == nil {
		return nil, false
	}
	return o.PlayerTheme, true
}

// HasPlayerTheme returns a boolean if a field has been set.
func (o *PublicPlaylistObject) HasPlayerTheme() bool {
	if o != nil && o.PlayerTheme != nil {
		return true
	}

	return false
}

// SetPlayerTheme gets a reference to the given PlayerTheme and assigns it to the PlayerTheme field.
func (o *PublicPlaylistObject) SetPlayerTheme(v PlayerTheme) {
	o.PlayerTheme = &v
}

// GetPlaylist returns the Playlist field value if set, zero value otherwise.
func (o *PublicPlaylistObject) GetPlaylist() Playlist {
	if o == nil || o.Playlist == nil {
		var ret Playlist
		return ret
	}
	return *o.Playlist
}

// GetPlaylistOk returns a tuple with the Playlist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicPlaylistObject) GetPlaylistOk() (*Playlist, bool) {
	if o == nil || o.Playlist == nil {
		return nil, false
	}
	return o.Playlist, true
}

// HasPlaylist returns a boolean if a field has been set.
func (o *PublicPlaylistObject) HasPlaylist() bool {
	if o != nil && o.Playlist != nil {
		return true
	}

	return false
}

// SetPlaylist gets a reference to the given Playlist and assigns it to the Playlist field.
func (o *PublicPlaylistObject) SetPlaylist(v Playlist) {
	o.Playlist = &v
}


type NullablePublicPlaylistObject struct {
	value *PublicPlaylistObject
	isSet bool
}

func (v NullablePublicPlaylistObject) Get() *PublicPlaylistObject {
	return v.value
}

func (v *NullablePublicPlaylistObject) Set(val *PublicPlaylistObject) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicPlaylistObject) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicPlaylistObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicPlaylistObject(val *PublicPlaylistObject) *NullablePublicPlaylistObject {
	return &NullablePublicPlaylistObject{value: val, isSet: true}
}


