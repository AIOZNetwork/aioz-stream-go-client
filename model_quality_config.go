/*
 * Aioz Stream API
 *
 * Aioz Stream Service
 *
 * API version: 1.0
 * Contact: support@swagger.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aiozstreamsdk

import (
//"encoding/json"
)

// QualityConfig struct for QualityConfig
type QualityConfig struct {
	AudioConfig   *AudioConfig `json:"audio_config,omitempty"`
	ContainerType *string      `json:"container_type,omitempty"`
	Resolution    *string      `json:"resolution,omitempty"`
	Type          *string      `json:"type,omitempty"`
	VideoConfig   *VideoConfig `json:"video_config,omitempty"`
}

// NewQualityConfig instantiates a new QualityConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQualityConfig() *QualityConfig {
	this := QualityConfig{}
	return &this
}

// NewQualityConfigWithDefaults instantiates a new QualityConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQualityConfigWithDefaults() *QualityConfig {
	this := QualityConfig{}
	return &this
}

// GetAudioConfig returns the AudioConfig field value if set, zero value otherwise.
func (o *QualityConfig) GetAudioConfig() AudioConfig {
	if o == nil || o.AudioConfig == nil {
		var ret AudioConfig
		return ret
	}
	return *o.AudioConfig
}

// GetAudioConfigOk returns a tuple with the AudioConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QualityConfig) GetAudioConfigOk() (*AudioConfig, bool) {
	if o == nil || o.AudioConfig == nil {
		return nil, false
	}
	return o.AudioConfig, true
}

// HasAudioConfig returns a boolean if a field has been set.
func (o *QualityConfig) HasAudioConfig() bool {
	if o != nil && o.AudioConfig != nil {
		return true
	}

	return false
}

// SetAudioConfig gets a reference to the given AudioConfig and assigns it to the AudioConfig field.
func (o *QualityConfig) SetAudioConfig(v AudioConfig) {
	o.AudioConfig = &v
}

// GetContainerType returns the ContainerType field value if set, zero value otherwise.
func (o *QualityConfig) GetContainerType() string {
	if o == nil || o.ContainerType == nil {
		var ret string
		return ret
	}
	return *o.ContainerType
}

// GetContainerTypeOk returns a tuple with the ContainerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QualityConfig) GetContainerTypeOk() (*string, bool) {
	if o == nil || o.ContainerType == nil {
		return nil, false
	}
	return o.ContainerType, true
}

// HasContainerType returns a boolean if a field has been set.
func (o *QualityConfig) HasContainerType() bool {
	if o != nil && o.ContainerType != nil {
		return true
	}

	return false
}

// SetContainerType gets a reference to the given string and assigns it to the ContainerType field.
func (o *QualityConfig) SetContainerType(v string) {
	o.ContainerType = &v
}

// GetResolution returns the Resolution field value if set, zero value otherwise.
func (o *QualityConfig) GetResolution() string {
	if o == nil || o.Resolution == nil {
		var ret string
		return ret
	}
	return *o.Resolution
}

// GetResolutionOk returns a tuple with the Resolution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QualityConfig) GetResolutionOk() (*string, bool) {
	if o == nil || o.Resolution == nil {
		return nil, false
	}
	return o.Resolution, true
}

// HasResolution returns a boolean if a field has been set.
func (o *QualityConfig) HasResolution() bool {
	if o != nil && o.Resolution != nil {
		return true
	}

	return false
}

// SetResolution gets a reference to the given string and assigns it to the Resolution field.
func (o *QualityConfig) SetResolution(v string) {
	o.Resolution = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *QualityConfig) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QualityConfig) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *QualityConfig) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *QualityConfig) SetType(v string) {
	o.Type = &v
}

// GetVideoConfig returns the VideoConfig field value if set, zero value otherwise.
func (o *QualityConfig) GetVideoConfig() VideoConfig {
	if o == nil || o.VideoConfig == nil {
		var ret VideoConfig
		return ret
	}
	return *o.VideoConfig
}

// GetVideoConfigOk returns a tuple with the VideoConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QualityConfig) GetVideoConfigOk() (*VideoConfig, bool) {
	if o == nil || o.VideoConfig == nil {
		return nil, false
	}
	return o.VideoConfig, true
}

// HasVideoConfig returns a boolean if a field has been set.
func (o *QualityConfig) HasVideoConfig() bool {
	if o != nil && o.VideoConfig != nil {
		return true
	}

	return false
}

// SetVideoConfig gets a reference to the given VideoConfig and assigns it to the VideoConfig field.
func (o *QualityConfig) SetVideoConfig(v VideoConfig) {
	o.VideoConfig = &v
}

type NullableQualityConfig struct {
	value *QualityConfig
	isSet bool
}

func (v NullableQualityConfig) Get() *QualityConfig {
	return v.value
}

func (v *NullableQualityConfig) Set(val *QualityConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableQualityConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableQualityConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQualityConfig(val *QualityConfig) *NullableQualityConfig {
	return &NullableQualityConfig{value: val, isSet: true}
}
