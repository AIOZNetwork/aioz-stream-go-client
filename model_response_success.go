/*
 * Aioz Stream API
 *
 * Aioz Stream Service
 *
 * API version: 1.0
 * Contact: support@swagger.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aiozstreamsdk

import (
	//"encoding/json"
)

// ResponseSuccess struct for ResponseSuccess
type ResponseSuccess struct {
	Message *string `json:"message,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewResponseSuccess instantiates a new ResponseSuccess object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseSuccess() *ResponseSuccess {
	this := ResponseSuccess{}
	return &this
}

// NewResponseSuccessWithDefaults instantiates a new ResponseSuccess object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseSuccessWithDefaults() *ResponseSuccess {
	this := ResponseSuccess{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ResponseSuccess) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseSuccess) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ResponseSuccess) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ResponseSuccess) SetMessage(v string) {
	o.Message = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ResponseSuccess) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseSuccess) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ResponseSuccess) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ResponseSuccess) SetStatus(v string) {
	o.Status = &v
}


type NullableResponseSuccess struct {
	value *ResponseSuccess
	isSet bool
}

func (v NullableResponseSuccess) Get() *ResponseSuccess {
	return v.value
}

func (v *NullableResponseSuccess) Set(val *ResponseSuccess) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseSuccess) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseSuccess) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseSuccess(val *ResponseSuccess) *NullableResponseSuccess {
	return &NullableResponseSuccess{value: val, isSet: true}
}


