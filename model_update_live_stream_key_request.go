/*
 * Aioz Stream API
 *
 * Aioz Stream Service
 *
 * API version: 1.0
 * Contact: support@swagger.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aiozstreamsdk

import (
//"encoding/json"
)

// UpdateLiveStreamKeyRequest struct for UpdateLiveStreamKeyRequest
type UpdateLiveStreamKeyRequest struct {
	Name *string `json:"name,omitempty"`
	Save *bool   `json:"save,omitempty"`
}

// NewUpdateLiveStreamKeyRequest instantiates a new UpdateLiveStreamKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateLiveStreamKeyRequest() *UpdateLiveStreamKeyRequest {
	this := UpdateLiveStreamKeyRequest{}
	return &this
}

// NewUpdateLiveStreamKeyRequestWithDefaults instantiates a new UpdateLiveStreamKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateLiveStreamKeyRequestWithDefaults() *UpdateLiveStreamKeyRequest {
	this := UpdateLiveStreamKeyRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateLiveStreamKeyRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLiveStreamKeyRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateLiveStreamKeyRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateLiveStreamKeyRequest) SetName(v string) {
	o.Name = &v
}

// GetSave returns the Save field value if set, zero value otherwise.
func (o *UpdateLiveStreamKeyRequest) GetSave() bool {
	if o == nil || o.Save == nil {
		var ret bool
		return ret
	}
	return *o.Save
}

// GetSaveOk returns a tuple with the Save field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLiveStreamKeyRequest) GetSaveOk() (*bool, bool) {
	if o == nil || o.Save == nil {
		return nil, false
	}
	return o.Save, true
}

// HasSave returns a boolean if a field has been set.
func (o *UpdateLiveStreamKeyRequest) HasSave() bool {
	if o != nil && o.Save != nil {
		return true
	}

	return false
}

// SetSave gets a reference to the given bool and assigns it to the Save field.
func (o *UpdateLiveStreamKeyRequest) SetSave(v bool) {
	o.Save = &v
}

type NullableUpdateLiveStreamKeyRequest struct {
	value *UpdateLiveStreamKeyRequest
	isSet bool
}

func (v NullableUpdateLiveStreamKeyRequest) Get() *UpdateLiveStreamKeyRequest {
	return v.value
}

func (v *NullableUpdateLiveStreamKeyRequest) Set(val *UpdateLiveStreamKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateLiveStreamKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateLiveStreamKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateLiveStreamKeyRequest(val *UpdateLiveStreamKeyRequest) *NullableUpdateLiveStreamKeyRequest {
	return &NullableUpdateLiveStreamKeyRequest{value: val, isSet: true}
}
