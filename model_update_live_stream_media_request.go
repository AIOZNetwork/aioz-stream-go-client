/*
 * Aioz Stream API
 *
 * Aioz Stream Service
 *
 * API version: 1.0
 * Contact: support@swagger.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aiozstreamsdk

import (
//"encoding/json"
)

// UpdateLiveStreamMediaRequest struct for UpdateLiveStreamMediaRequest
type UpdateLiveStreamMediaRequest struct {
	Save  *bool   `json:"save,omitempty"`
	Title *string `json:"title,omitempty"`
}

// NewUpdateLiveStreamMediaRequest instantiates a new UpdateLiveStreamMediaRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateLiveStreamMediaRequest() *UpdateLiveStreamMediaRequest {
	this := UpdateLiveStreamMediaRequest{}
	return &this
}

// NewUpdateLiveStreamMediaRequestWithDefaults instantiates a new UpdateLiveStreamMediaRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateLiveStreamMediaRequestWithDefaults() *UpdateLiveStreamMediaRequest {
	this := UpdateLiveStreamMediaRequest{}
	return &this
}

// GetSave returns the Save field value if set, zero value otherwise.
func (o *UpdateLiveStreamMediaRequest) GetSave() bool {
	if o == nil || o.Save == nil {
		var ret bool
		return ret
	}
	return *o.Save
}

// GetSaveOk returns a tuple with the Save field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLiveStreamMediaRequest) GetSaveOk() (*bool, bool) {
	if o == nil || o.Save == nil {
		return nil, false
	}
	return o.Save, true
}

// HasSave returns a boolean if a field has been set.
func (o *UpdateLiveStreamMediaRequest) HasSave() bool {
	if o != nil && o.Save != nil {
		return true
	}

	return false
}

// SetSave gets a reference to the given bool and assigns it to the Save field.
func (o *UpdateLiveStreamMediaRequest) SetSave(v bool) {
	o.Save = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *UpdateLiveStreamMediaRequest) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLiveStreamMediaRequest) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *UpdateLiveStreamMediaRequest) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *UpdateLiveStreamMediaRequest) SetTitle(v string) {
	o.Title = &v
}

type NullableUpdateLiveStreamMediaRequest struct {
	value *UpdateLiveStreamMediaRequest
	isSet bool
}

func (v NullableUpdateLiveStreamMediaRequest) Get() *UpdateLiveStreamMediaRequest {
	return v.value
}

func (v *NullableUpdateLiveStreamMediaRequest) Set(val *UpdateLiveStreamMediaRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateLiveStreamMediaRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateLiveStreamMediaRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateLiveStreamMediaRequest(val *UpdateLiveStreamMediaRequest) *NullableUpdateLiveStreamMediaRequest {
	return &NullableUpdateLiveStreamMediaRequest{value: val, isSet: true}
}
