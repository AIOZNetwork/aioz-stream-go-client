/*
 * Aioz Stream API
 *
 * Aioz Stream Service
 *
 * API version: 1.0
 * Contact: support@swagger.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aiozstreamsdk

import (
//"encoding/json"
)

// UpsertLiveStreamMulticastInput struct for UpsertLiveStreamMulticastInput
type UpsertLiveStreamMulticastInput struct {
	MulticastUrls *[]string `json:"multicast_urls,omitempty"`
}

// NewUpsertLiveStreamMulticastInput instantiates a new UpsertLiveStreamMulticastInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpsertLiveStreamMulticastInput() *UpsertLiveStreamMulticastInput {
	this := UpsertLiveStreamMulticastInput{}
	return &this
}

// NewUpsertLiveStreamMulticastInputWithDefaults instantiates a new UpsertLiveStreamMulticastInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpsertLiveStreamMulticastInputWithDefaults() *UpsertLiveStreamMulticastInput {
	this := UpsertLiveStreamMulticastInput{}
	return &this
}

// GetMulticastUrls returns the MulticastUrls field value if set, zero value otherwise.
func (o *UpsertLiveStreamMulticastInput) GetMulticastUrls() []string {
	if o == nil || o.MulticastUrls == nil {
		var ret []string
		return ret
	}
	return *o.MulticastUrls
}

// GetMulticastUrlsOk returns a tuple with the MulticastUrls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpsertLiveStreamMulticastInput) GetMulticastUrlsOk() (*[]string, bool) {
	if o == nil || o.MulticastUrls == nil {
		return nil, false
	}
	return o.MulticastUrls, true
}

// HasMulticastUrls returns a boolean if a field has been set.
func (o *UpsertLiveStreamMulticastInput) HasMulticastUrls() bool {
	if o != nil && o.MulticastUrls != nil {
		return true
	}

	return false
}

// SetMulticastUrls gets a reference to the given []string and assigns it to the MulticastUrls field.
func (o *UpsertLiveStreamMulticastInput) SetMulticastUrls(v []string) {
	o.MulticastUrls = &v
}

type NullableUpsertLiveStreamMulticastInput struct {
	value *UpsertLiveStreamMulticastInput
	isSet bool
}

func (v NullableUpsertLiveStreamMulticastInput) Get() *UpsertLiveStreamMulticastInput {
	return v.value
}

func (v *NullableUpsertLiveStreamMulticastInput) Set(val *UpsertLiveStreamMulticastInput) {
	v.value = val
	v.isSet = true
}

func (v NullableUpsertLiveStreamMulticastInput) IsSet() bool {
	return v.isSet
}

func (v *NullableUpsertLiveStreamMulticastInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpsertLiveStreamMulticastInput(val *UpsertLiveStreamMulticastInput) *NullableUpsertLiveStreamMulticastInput {
	return &NullableUpsertLiveStreamMulticastInput{value: val, isSet: true}
}
