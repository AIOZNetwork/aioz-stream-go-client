/*
 * Aioz Stream API
 *
 * Aioz Stream Service
 *
 * API version: 1.0
 * Contact: support@swagger.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aiozstreamsdk

import (
//"encoding/json"
)

// User struct for User
type User struct {
	Balance              *float32 `json:"balance,omitempty"`
	CreatedAt            *string  `json:"created_at,omitempty"`
	Debt                 *float32 `json:"debt,omitempty"`
	Email                *string  `json:"email,omitempty"`
	FirstName            *string  `json:"first_name,omitempty"`
	Id                   *string  `json:"id,omitempty"`
	LastName             *string  `json:"last_name,omitempty"`
	MediaQualitiesConfig *string  `json:"media_qualities_config,omitempty"`
	UpdatedAt            *string  `json:"updated_at,omitempty"`
	WalletAddress        *string  `json:"wallet_address,omitempty"`
	WalletConnection     *string  `json:"wallet_connection,omitempty"`
}

// NewUser instantiates a new User object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUser() *User {
	this := User{}
	return &this
}

// NewUserWithDefaults instantiates a new User object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserWithDefaults() *User {
	this := User{}
	return &this
}

// GetBalance returns the Balance field value if set, zero value otherwise.
func (o *User) GetBalance() float32 {
	if o == nil || o.Balance == nil {
		var ret float32
		return ret
	}
	return *o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetBalanceOk() (*float32, bool) {
	if o == nil || o.Balance == nil {
		return nil, false
	}
	return o.Balance, true
}

// HasBalance returns a boolean if a field has been set.
func (o *User) HasBalance() bool {
	if o != nil && o.Balance != nil {
		return true
	}

	return false
}

// SetBalance gets a reference to the given float32 and assigns it to the Balance field.
func (o *User) SetBalance(v float32) {
	o.Balance = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *User) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *User) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *User) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDebt returns the Debt field value if set, zero value otherwise.
func (o *User) GetDebt() float32 {
	if o == nil || o.Debt == nil {
		var ret float32
		return ret
	}
	return *o.Debt
}

// GetDebtOk returns a tuple with the Debt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetDebtOk() (*float32, bool) {
	if o == nil || o.Debt == nil {
		return nil, false
	}
	return o.Debt, true
}

// HasDebt returns a boolean if a field has been set.
func (o *User) HasDebt() bool {
	if o != nil && o.Debt != nil {
		return true
	}

	return false
}

// SetDebt gets a reference to the given float32 and assigns it to the Debt field.
func (o *User) SetDebt(v float32) {
	o.Debt = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *User) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *User) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *User) SetEmail(v string) {
	o.Email = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *User) GetFirstName() string {
	if o == nil || o.FirstName == nil {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetFirstNameOk() (*string, bool) {
	if o == nil || o.FirstName == nil {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *User) HasFirstName() bool {
	if o != nil && o.FirstName != nil {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *User) SetFirstName(v string) {
	o.FirstName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *User) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *User) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *User) SetId(v string) {
	o.Id = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *User) GetLastName() string {
	if o == nil || o.LastName == nil {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetLastNameOk() (*string, bool) {
	if o == nil || o.LastName == nil {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *User) HasLastName() bool {
	if o != nil && o.LastName != nil {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *User) SetLastName(v string) {
	o.LastName = &v
}

// GetMediaQualitiesConfig returns the MediaQualitiesConfig field value if set, zero value otherwise.
func (o *User) GetMediaQualitiesConfig() string {
	if o == nil || o.MediaQualitiesConfig == nil {
		var ret string
		return ret
	}
	return *o.MediaQualitiesConfig
}

// GetMediaQualitiesConfigOk returns a tuple with the MediaQualitiesConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetMediaQualitiesConfigOk() (*string, bool) {
	if o == nil || o.MediaQualitiesConfig == nil {
		return nil, false
	}
	return o.MediaQualitiesConfig, true
}

// HasMediaQualitiesConfig returns a boolean if a field has been set.
func (o *User) HasMediaQualitiesConfig() bool {
	if o != nil && o.MediaQualitiesConfig != nil {
		return true
	}

	return false
}

// SetMediaQualitiesConfig gets a reference to the given string and assigns it to the MediaQualitiesConfig field.
func (o *User) SetMediaQualitiesConfig(v string) {
	o.MediaQualitiesConfig = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *User) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *User) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *User) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetWalletAddress returns the WalletAddress field value if set, zero value otherwise.
func (o *User) GetWalletAddress() string {
	if o == nil || o.WalletAddress == nil {
		var ret string
		return ret
	}
	return *o.WalletAddress
}

// GetWalletAddressOk returns a tuple with the WalletAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetWalletAddressOk() (*string, bool) {
	if o == nil || o.WalletAddress == nil {
		return nil, false
	}
	return o.WalletAddress, true
}

// HasWalletAddress returns a boolean if a field has been set.
func (o *User) HasWalletAddress() bool {
	if o != nil && o.WalletAddress != nil {
		return true
	}

	return false
}

// SetWalletAddress gets a reference to the given string and assigns it to the WalletAddress field.
func (o *User) SetWalletAddress(v string) {
	o.WalletAddress = &v
}

// GetWalletConnection returns the WalletConnection field value if set, zero value otherwise.
func (o *User) GetWalletConnection() string {
	if o == nil || o.WalletConnection == nil {
		var ret string
		return ret
	}
	return *o.WalletConnection
}

// GetWalletConnectionOk returns a tuple with the WalletConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetWalletConnectionOk() (*string, bool) {
	if o == nil || o.WalletConnection == nil {
		return nil, false
	}
	return o.WalletConnection, true
}

// HasWalletConnection returns a boolean if a field has been set.
func (o *User) HasWalletConnection() bool {
	if o != nil && o.WalletConnection != nil {
		return true
	}

	return false
}

// SetWalletConnection gets a reference to the given string and assigns it to the WalletConnection field.
func (o *User) SetWalletConnection(v string) {
	o.WalletConnection = &v
}

type NullableUser struct {
	value *User
	isSet bool
}

func (v NullableUser) Get() *User {
	return v.value
}

func (v *NullableUser) Set(val *User) {
	v.value = val
	v.isSet = true
}

func (v NullableUser) IsSet() bool {
	return v.isSet
}

func (v *NullableUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUser(val *User) *NullableUser {
	return &NullableUser{value: val, isSet: true}
}
