/*
 * Aioz Stream API
 *
 * Aioz Stream Service
 *
 * API version: 1.0
 * Contact: support@swagger.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aiozstreamsdk

import (
//"encoding/json"
)

// VideoCaption struct for VideoCaption
type VideoCaption struct {
	IsDefault *bool   `json:"is_default,omitempty"`
	Language  *string `json:"language,omitempty"`
	Url       *string `json:"url,omitempty"`
}

// NewVideoCaption instantiates a new VideoCaption object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVideoCaption() *VideoCaption {
	this := VideoCaption{}
	return &this
}

// NewVideoCaptionWithDefaults instantiates a new VideoCaption object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVideoCaptionWithDefaults() *VideoCaption {
	this := VideoCaption{}
	return &this
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *VideoCaption) GetIsDefault() bool {
	if o == nil || o.IsDefault == nil {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoCaption) GetIsDefaultOk() (*bool, bool) {
	if o == nil || o.IsDefault == nil {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *VideoCaption) HasIsDefault() bool {
	if o != nil && o.IsDefault != nil {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *VideoCaption) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *VideoCaption) GetLanguage() string {
	if o == nil || o.Language == nil {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoCaption) GetLanguageOk() (*string, bool) {
	if o == nil || o.Language == nil {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *VideoCaption) HasLanguage() bool {
	if o != nil && o.Language != nil {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *VideoCaption) SetLanguage(v string) {
	o.Language = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *VideoCaption) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoCaption) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *VideoCaption) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *VideoCaption) SetUrl(v string) {
	o.Url = &v
}

type NullableVideoCaption struct {
	value *VideoCaption
	isSet bool
}

func (v NullableVideoCaption) Get() *VideoCaption {
	return v.value
}

func (v *NullableVideoCaption) Set(val *VideoCaption) {
	v.value = val
	v.isSet = true
}

func (v NullableVideoCaption) IsSet() bool {
	return v.isSet
}

func (v *NullableVideoCaption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVideoCaption(val *VideoCaption) *NullableVideoCaption {
	return &NullableVideoCaption{value: val, isSet: true}
}
