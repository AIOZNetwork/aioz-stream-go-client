/*
 * Aioz Stream API
 *
 * Aioz Stream Service
 *
 * API version: 1.0
 * Contact: support@swagger.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aiozstreamsdk

import (
//"encoding/json"
)

// VideoConfig struct for VideoConfig
type VideoConfig struct {
	Bitrate *int32  `json:"bitrate,omitempty"`
	Codec   *string `json:"codec,omitempty"`
	Index   *int32  `json:"index,omitempty"`
}

// NewVideoConfig instantiates a new VideoConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVideoConfig() *VideoConfig {
	this := VideoConfig{}
	return &this
}

// NewVideoConfigWithDefaults instantiates a new VideoConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVideoConfigWithDefaults() *VideoConfig {
	this := VideoConfig{}
	return &this
}

// GetBitrate returns the Bitrate field value if set, zero value otherwise.
func (o *VideoConfig) GetBitrate() int32 {
	if o == nil || o.Bitrate == nil {
		var ret int32
		return ret
	}
	return *o.Bitrate
}

// GetBitrateOk returns a tuple with the Bitrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoConfig) GetBitrateOk() (*int32, bool) {
	if o == nil || o.Bitrate == nil {
		return nil, false
	}
	return o.Bitrate, true
}

// HasBitrate returns a boolean if a field has been set.
func (o *VideoConfig) HasBitrate() bool {
	if o != nil && o.Bitrate != nil {
		return true
	}

	return false
}

// SetBitrate gets a reference to the given int32 and assigns it to the Bitrate field.
func (o *VideoConfig) SetBitrate(v int32) {
	o.Bitrate = &v
}

// GetCodec returns the Codec field value if set, zero value otherwise.
func (o *VideoConfig) GetCodec() string {
	if o == nil || o.Codec == nil {
		var ret string
		return ret
	}
	return *o.Codec
}

// GetCodecOk returns a tuple with the Codec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoConfig) GetCodecOk() (*string, bool) {
	if o == nil || o.Codec == nil {
		return nil, false
	}
	return o.Codec, true
}

// HasCodec returns a boolean if a field has been set.
func (o *VideoConfig) HasCodec() bool {
	if o != nil && o.Codec != nil {
		return true
	}

	return false
}

// SetCodec gets a reference to the given string and assigns it to the Codec field.
func (o *VideoConfig) SetCodec(v string) {
	o.Codec = &v
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *VideoConfig) GetIndex() int32 {
	if o == nil || o.Index == nil {
		var ret int32
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoConfig) GetIndexOk() (*int32, bool) {
	if o == nil || o.Index == nil {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *VideoConfig) HasIndex() bool {
	if o != nil && o.Index != nil {
		return true
	}

	return false
}

// SetIndex gets a reference to the given int32 and assigns it to the Index field.
func (o *VideoConfig) SetIndex(v int32) {
	o.Index = &v
}

type NullableVideoConfig struct {
	value *VideoConfig
	isSet bool
}

func (v NullableVideoConfig) Get() *VideoConfig {
	return v.value
}

func (v *NullableVideoConfig) Set(val *VideoConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableVideoConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableVideoConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVideoConfig(val *VideoConfig) *NullableVideoConfig {
	return &NullableVideoConfig{value: val, isSet: true}
}
